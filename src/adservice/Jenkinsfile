#!/usr/bin/env groovy
pipeline {
    agent any
    tools {
        gradle 'gradle'
    }

    environment {
        ACR_REPO_URL = 'microservicesb.azurecr.io'
        IMAGE_TAG = "1.1.2"                   
   }
   

  stages {

             
        stage(' build image ') {
            steps {
                script {
                    echo "building the docker image..."
                        
                    // sh " docker build -t microservicesb.azurecr.io/adservice:${IMAGE_TAG} ./src/adservice" 
                       
                    }
                
            }
        }

        stage(' Syft Docker Scan Image Security ') {
            steps {
                script {
                    echo "test the docker image..."
                    // sh " docker sbom microservicesb.azurecr.io/adservice:${IMAGE_TAG} "
                        
                    }
                }
            }

        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    
                    sh "cd ./src/adservice/ && \
                       chmod +x gradlew && \
                     ./gradlew  sonar -Dsonar.projectKey=microservices \
                    -Dsonar.projectName='microservices' \
                    -Dsonar.host.url=http://sonarqube:9000 \
                    -Dsonar.token=sqp_2435605731d09e21da635feb73b5eb06354be38d "
                }
            }
        }
        stage("Quality gate") {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }
        stage('SonarQube Analysi') {
             steps {
                
                withSonarQubeEnv('sonarqube') {
                sh """/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonarqube/bin/sonar-scanner \
                -D sonar.projectVersion=1.0-SNAPSHOT \
                -D sonar.login=admin \
                -D sonar.password=sonar \
                -D sonar.projectBaseDir=/var/lib/jenkins/workspace/adservice/ \
                -Dsonar.projectKey=microservices \
                -D sonar.projectKey=microservices \
                -D sonar.sourceEncoding=UTF-8 \
                -D sonar.language=java \
                -D sonar.sources=microservices-application-/src/adservice/src/main \
                -D sonar.host.url=http://sonarqube:9000/"""
                    }
            }
        }
    


        stage(' push image to ACR ') {
            steps {
                script {
                    echo "pushing the docker image..."
                    withCredentials([usernamePassword(credentialsId: 'ACR', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                        
                        sh "echo $PASS | docker login -u $USER --password-stdin ${ACR_REPO_URL}"

                        sh " docker push  microservicesb.azurecr.io/adservice:${IMAGE_TAG} "
    
                    }
                }
            }
        }
  
        
    
        stage('trriger ArgoCD application') {

        steps {
            script {
               withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'PASS', usernameVariable: 'USER')]){ 
                
                //git config here for the first time run
                sh 'git config --global user.email "jenkins@jenkins.com"'
                sh 'git config --global user.name "jenkins"'  

                sh ' [ -d "Microservice-Automated-Deployment-to-kubernetes-Cluster" ] && \
                     (cd Microservice-Automated-Deployment-to-kubernetes-Cluster && git pull) || \
                     git clone https://${USER}:${PASS}@github.com/${USER}/Microservice-Automated-Deployment-to-kubernetes-Cluster.git '
                
                sh 'sed -i "s/\\(tag: \\).*/\\1\\"$IMAGE_TAG\\"/" Microservice-Automated-Deployment-to-kubernetes-Cluster/charts/microservices/values/adservice.yaml '
                
                sh "git remote set-url origin https://${USER}:${PASS}@github.com/${USER}/Microservice-Automated-Deployment-to-kubernetes-Cluster.git "
                
                sh 'cd Microservice-Automated-Deployment-to-kubernetes-Cluster && \
                    git add charts/microservices/values/adservice.yaml && \
                    git commit -am "Updates adservice.yaml  with $IMAGE_TAG tag " && \
                    git push origin HEAD:main ' 
                 
            }        
        
                }
            }
        }




}
}
